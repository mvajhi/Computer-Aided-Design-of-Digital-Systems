library(demo) {
  cell(BUF) {
    area: 6;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A"; }
  }
  cell(NOT) {
    area: 3;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A'"; }
  }
  cell(MUX) {
    area: 10;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(S) { direction: input; }
    pin(Y) { direction: output;
             function: "(((S A) + (!S B)))"; }
  }
  cell(C1) {
    area: 0.1;
    pin(A0) { direction: input; }
    pin(A1) { direction: input; }
    pin(SA) { direction: input; }
    pin(B0) { direction: input; }
    pin(B1) { direction: input; }
    pin(SB) { direction: input; }
    pin(S0) { direction: input; }
    pin(S1) { direction: input; }
    pin(F) { direction: output;
             function: "( ((S0 + S1) ((SB B1) + (!SB B0))) + (!(S0 + S1)  ((SA A1) + (!SA A0))) )
             "; }
  }
  cell(NAND) {
    area: 4;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B)'"; }
  }
  cell(NOR) {
    area: 4;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B)'"; }
  }
  cell(DFF) {
    area: 18;
    ff(IQ, IQN) { clocked_on: C;
                  next_state: D; }
    pin(C) { direction: input;
                 clock: true; }
    pin(D) { direction: input; }
    pin(Q) { direction: output;
              function: "IQ"; }
  }
  cell(DFF_PP0) {
		ff(IQ, IQN) {
			clocked_on: "C";
			next_state: "D";
			clear: "R";
		}
		pin(D) { direction: input; }
		pin(R) { direction: input; }
		pin(C) { direction: input; clock: true; }
		pin(Q) { direction: output; function: "IQ"; }
	}
	cell(DFF_PP1) {
		ff(IQ, IQN) {
			clocked_on: "C";
			next_state: "D";
			preset: "R";
		}
		pin(D) { direction: input; }
		pin(R) { direction: input; }
		pin(C) { direction: input; clock: true; }
		pin(Q) { direction: output; function: "IQ"; }
	}
  
  
}
